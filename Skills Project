{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM64f9mOLC9fRB31n8FHbI6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Project brief\n","We as a company are looking at developing a new focus area in therapeutics around the infectious disease leptospirosis.\n","We wish to make connections with researchers looking at this disease. We therefore need you to determine who the key active researchers are in this field. In order to avoid trying to work with researchers who are in competition with one another, we also need to build up a picture of who is working with who.\n","Our database team has assembled CSV files of papers which seem to relate to the gene of interest, including title, abstract, journal, year and information about the first author. A second CSV file provides the full author list for each paper. Can you give us some graphics to present to the board on who are the most active researchers in this field, who they collaborate with, and how research in this area has changed over time? If there is anything else you can find out from the data supplied that would also be helpful.\n"],"metadata":{"id":"QJLwZdidCVul"}},{"cell_type":"markdown","source":[],"metadata":{"id":"m5nbyy46CzrX"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6cJv3tnwIUck","executionInfo":{"status":"ok","timestamp":1737381990259,"user_tz":0,"elapsed":32354,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"84b0ce97-369c-45e0-80a7-1cac1e444372"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive; drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np"],"metadata":{"id":"n4oDbg_iryqU","executionInfo":{"status":"ok","timestamp":1737381991291,"user_tz":0,"elapsed":1037,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["\n","articles=pd.read_csv('/content/drive/MyDrive/Skills_Assessment_02/articles.leptospirosis.csv')\n","authors=pd.read_csv('/content/drive/MyDrive/Skills_Assessment_02/authors.leptospirosis.csv')\n","paper_counts=pd.read_csv('/content/drive/MyDrive/Skills_Assessment_02/paper_counts.csv')\n","\n","display(articles,authors,paper_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"FyhcOJ3RIfEI","executionInfo":{"status":"ok","timestamp":1737381997935,"user_tz":0,"elapsed":2966,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"44f9b36f-5754-48da-83ec-989c3117383c"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["          PMID                                              Title  \\\n","0     10548299  Risk factors for death and changing patterns i...   \n","1     10569777  Leptospiral outer membrane proteins OmpL1 and ...   \n","2     10585813  Acute lung injury in leptospirosis: clinical a...   \n","3     10586903  Assessment of the efficacy of an IgM-elisa and...   \n","4     10596270  [An old disease with a new face: canine leptos...   \n","...        ...                                                ...   \n","3384  38058661       Deeply jaundiced: Not so surgical after all.   \n","3385  38074946  Leptospirosis seroprevalence and risk factors ...   \n","3386  38081475  Leptospiral lipopolysaccharide dampens inflamm...   \n","3387  38087323  Leptospirosis in Malaysia: current status, ins...   \n","3388  38094659  Misdiagnosis of pneumorrhagia leptospirosis as...   \n","\n","                                               Abstract       ISSN  \\\n","0     The risk factors for death and changes in clin...  0002-9637   \n","1     New vaccine strategies are needed for preventi...  0019-9567   \n","2     Forty-two consecutive patients with leptospiro...  1058-4838   \n","3     In a prospective study in Barbados between 197...  0002-9637   \n","4     The clinical features of the disease are prese...  0036-7281   \n","...                                                 ...        ...   \n","3384  Leptospirosis is an under-recognised disease i...  2313-1810   \n","3385  The objectives of this study were to determine...  2772-7076   \n","3386  Leptospira interrogans are pathogenic bacteria...  1769-714X   \n","3387  Among zoonotic infections, leptospirosis has a...  1880-6805   \n","3388  The incidence of critical leptospirosis manife...  2213-0071   \n","\n","                                                Journal  \\\n","0     The American journal of tropical medicine and ...   \n","1                                Infection and immunity   \n","2     Clinical infectious diseases : an official pub...   \n","3     The American journal of tropical medicine and ...   \n","4                    Schweizer Archiv fur Tierheilkunde   \n","...                                                 ...   \n","3384    Southern African journal of infectious diseases   \n","3385                                       IJID regions   \n","3386                             Microbes and infection   \n","3387              Journal of physiological anthropology   \n","3388                  Respiratory medicine case reports   \n","\n","                   Location  Year FirstAuthorForename FirstAuthorLastname  \\\n","0                (61) 630-4  1999                   E               Daher   \n","1              (67) 6572-82  1999                 D A               Haake   \n","2               (29) 1561-3  1999                 P C             Marotto   \n","3                (61) 731-4  1999                   P          Cumberland   \n","4             (141) 499-507  1999                   A         Steger-Lieb   \n","...                     ...   ...                 ...                 ...   \n","3384               (38) 559  2023            Wesley P          du Plessis   \n","3385            (9) 125-130  2023              Sylvie                Zida   \n","3386  S1286-4579(23)00184-3  2023            Delphine            Bonhomme   \n","3387                (42) 30  2023             Noraini              Philip   \n","3388            (46) 101954  2023          Guan-Sheng                  Li   \n","\n","     FirstAuthorInitials                             FirstAuthorAffiliation  \n","0                      E  Departamento de Medicina Clínica, Faculdade de...  \n","1                     DA  Division of Infectious Diseases, Veterans Affa...  \n","2                     PC  Intensive Care Unit, Instituto de Infectologia...  \n","3                      P  Infectious Disease Epidemiology Unit, London S...  \n","4                      A     Klinik für kleine Haustiere, Universität Bern.  \n","...                  ...                                                ...  \n","3384                  WP  Division of General Internal Medicine, Faculty...  \n","3385                   S  Institut de Recherche en Sciences de la Santé ...  \n","3386                   D  Institut Pasteur, Université Paris Cité, CNRS ...  \n","3387                   N  School of Biological Sciences, Universiti Sain...  \n","3388                  GS  Department of Critical Medicine, Daomenkou, Ch...  \n","\n","[3389 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-ff29967f-3497-43d9-be32-b27277f11b54\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PMID</th>\n","      <th>Title</th>\n","      <th>Abstract</th>\n","      <th>ISSN</th>\n","      <th>Journal</th>\n","      <th>Location</th>\n","      <th>Year</th>\n","      <th>FirstAuthorForename</th>\n","      <th>FirstAuthorLastname</th>\n","      <th>FirstAuthorInitials</th>\n","      <th>FirstAuthorAffiliation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10548299</td>\n","      <td>Risk factors for death and changing patterns i...</td>\n","      <td>The risk factors for death and changes in clin...</td>\n","      <td>0002-9637</td>\n","      <td>The American journal of tropical medicine and ...</td>\n","      <td>(61) 630-4</td>\n","      <td>1999</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10569777</td>\n","      <td>Leptospiral outer membrane proteins OmpL1 and ...</td>\n","      <td>New vaccine strategies are needed for preventi...</td>\n","      <td>0019-9567</td>\n","      <td>Infection and immunity</td>\n","      <td>(67) 6572-82</td>\n","      <td>1999</td>\n","      <td>D A</td>\n","      <td>Haake</td>\n","      <td>DA</td>\n","      <td>Division of Infectious Diseases, Veterans Affa...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10585813</td>\n","      <td>Acute lung injury in leptospirosis: clinical a...</td>\n","      <td>Forty-two consecutive patients with leptospiro...</td>\n","      <td>1058-4838</td>\n","      <td>Clinical infectious diseases : an official pub...</td>\n","      <td>(29) 1561-3</td>\n","      <td>1999</td>\n","      <td>P C</td>\n","      <td>Marotto</td>\n","      <td>PC</td>\n","      <td>Intensive Care Unit, Instituto de Infectologia...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10586903</td>\n","      <td>Assessment of the efficacy of an IgM-elisa and...</td>\n","      <td>In a prospective study in Barbados between 197...</td>\n","      <td>0002-9637</td>\n","      <td>The American journal of tropical medicine and ...</td>\n","      <td>(61) 731-4</td>\n","      <td>1999</td>\n","      <td>P</td>\n","      <td>Cumberland</td>\n","      <td>P</td>\n","      <td>Infectious Disease Epidemiology Unit, London S...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10596270</td>\n","      <td>[An old disease with a new face: canine leptos...</td>\n","      <td>The clinical features of the disease are prese...</td>\n","      <td>0036-7281</td>\n","      <td>Schweizer Archiv fur Tierheilkunde</td>\n","      <td>(141) 499-507</td>\n","      <td>1999</td>\n","      <td>A</td>\n","      <td>Steger-Lieb</td>\n","      <td>A</td>\n","      <td>Klinik für kleine Haustiere, Universität Bern.</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3384</th>\n","      <td>38058661</td>\n","      <td>Deeply jaundiced: Not so surgical after all.</td>\n","      <td>Leptospirosis is an under-recognised disease i...</td>\n","      <td>2313-1810</td>\n","      <td>Southern African journal of infectious diseases</td>\n","      <td>(38) 559</td>\n","      <td>2023</td>\n","      <td>Wesley P</td>\n","      <td>du Plessis</td>\n","      <td>WP</td>\n","      <td>Division of General Internal Medicine, Faculty...</td>\n","    </tr>\n","    <tr>\n","      <th>3385</th>\n","      <td>38074946</td>\n","      <td>Leptospirosis seroprevalence and risk factors ...</td>\n","      <td>The objectives of this study were to determine...</td>\n","      <td>2772-7076</td>\n","      <td>IJID regions</td>\n","      <td>(9) 125-130</td>\n","      <td>2023</td>\n","      <td>Sylvie</td>\n","      <td>Zida</td>\n","      <td>S</td>\n","      <td>Institut de Recherche en Sciences de la Santé ...</td>\n","    </tr>\n","    <tr>\n","      <th>3386</th>\n","      <td>38081475</td>\n","      <td>Leptospiral lipopolysaccharide dampens inflamm...</td>\n","      <td>Leptospira interrogans are pathogenic bacteria...</td>\n","      <td>1769-714X</td>\n","      <td>Microbes and infection</td>\n","      <td>S1286-4579(23)00184-3</td>\n","      <td>2023</td>\n","      <td>Delphine</td>\n","      <td>Bonhomme</td>\n","      <td>D</td>\n","      <td>Institut Pasteur, Université Paris Cité, CNRS ...</td>\n","    </tr>\n","    <tr>\n","      <th>3387</th>\n","      <td>38087323</td>\n","      <td>Leptospirosis in Malaysia: current status, ins...</td>\n","      <td>Among zoonotic infections, leptospirosis has a...</td>\n","      <td>1880-6805</td>\n","      <td>Journal of physiological anthropology</td>\n","      <td>(42) 30</td>\n","      <td>2023</td>\n","      <td>Noraini</td>\n","      <td>Philip</td>\n","      <td>N</td>\n","      <td>School of Biological Sciences, Universiti Sain...</td>\n","    </tr>\n","    <tr>\n","      <th>3388</th>\n","      <td>38094659</td>\n","      <td>Misdiagnosis of pneumorrhagia leptospirosis as...</td>\n","      <td>The incidence of critical leptospirosis manife...</td>\n","      <td>2213-0071</td>\n","      <td>Respiratory medicine case reports</td>\n","      <td>(46) 101954</td>\n","      <td>2023</td>\n","      <td>Guan-Sheng</td>\n","      <td>Li</td>\n","      <td>GS</td>\n","      <td>Department of Critical Medicine, Daomenkou, Ch...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3389 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff29967f-3497-43d9-be32-b27277f11b54')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ff29967f-3497-43d9-be32-b27277f11b54 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ff29967f-3497-43d9-be32-b27277f11b54');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e5cb20b9-9088-4dc3-bc8c-cfb38fff5d19\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5cb20b9-9088-4dc3-bc8c-cfb38fff5d19')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e5cb20b9-9088-4dc3-bc8c-cfb38fff5d19 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_948994c9-85af-4215-9d30-1ccfba82b527\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('articles')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_948994c9-85af-4215-9d30-1ccfba82b527 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('articles');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"articles","summary":"{\n  \"name\": \"articles\",\n  \"rows\": 3389,\n  \"fields\": [\n    {\n      \"column\": \"PMID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7379933,\n        \"min\": 10548299,\n        \"max\": 38094659,\n        \"num_unique_values\": 3389,\n        \"samples\": [\n          11895929,\n          25776541,\n          30564184\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3376,\n        \"samples\": [\n          \"Sequence analysis of LipL41 and LipL21: Prospective Outer Membrane Proteins (OMPs) in early diagnosing leptospirosis.\",\n          \"Bacterial diseases of farmed deer and bison.\",\n          \"Molecular and serological characterization of Leptospira interrogans serovar Canicola isolated from dogs, swine, and bovine in Brazil.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Abstract\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3386,\n        \"samples\": [\n          \"The HlyX, a putative hemolysin identified from the Leptospira genomes, was cloned, expressed in Escherichia coli, purified, and its hemolytic activity was confirmed. Mouse polyclonal antiserum against the recombinant HlyX recognized HlyX-related antigens in a panel of Leptospira species extracts and it was also able to abolish the hemolytic activity of HlyX. A mixture of HlyX and LipL32, a known hemolysin from Leptospira, induced hemolysis in a synergistic way that was fully inhibited by antiserum against either protein. Moreover, sera from patients with leptospirosis also recognized the recombinant HlyX, showing that it is presented to the host immune system during Leptospira infection.\",\n          \"A recombinant antigen-based single serum dilution enzyme-linked immunosorbent assay (ELISA) was developed to measure the specific antibody activity in sera of dogs with leptospirosis. The recombinant antigen developed and used in the assay was specific for the pathogenic serovars of Leptospira. A linear relationship was found to exist between the predicted antibody titres at a single working dilution of 1:1000 and the corresponding observed serum titres as determined by the standard serial-dilution method. Regression analysis was used to determine a standard curve from which an equation can be derived that allows demonstration of the mentioned correlation. The equation was then used to convert the corrected absorbance readings of the single working dilution directly into the predicted ELISA antibody titres. The assay was proved to be sensitive, specific and accurate as compared to the standard microscopic agglutination test (MAT).\",\n          \"All cases of human leptospirosis observed at the S. Bortolo Hospital, Vicenza, Italy, in the period from September 1990 to December 2003 were retrospectively reviewed. The aim of the study was to define the epidemiological, clinical, diagnostic, and therapeutic aspects of this infection and to compare these with an earlier local study (1979-1990) in order to assess if any changes have occurred over time. The screening test was made using macroscopic agglutination and the diagnosis was definitively confirmed using the microscopic agglutination test (MAT). The etiological serotype was identified in 13 patients (68%) and Leptospira poi was the most frequent serovar. Hepatic and renal involvements were present in a high percentage of patients (71% and 74%, respectively), cardiac involvement in 39%, and hypertriglyceridemia and hepatic steatosis were observed in 68% and 43% of cases, respectively. One patient died because of acute renal and respiratory failure. Intravenous penicillin was the treatment of choice. A consistent reduction in the prevalence was observed during the time period of this study (n = 38) compared with the previous period (n = 86); males were more affected than females in both time periods. In industrialized countries the prevalence of leptospirosis is decreasing; nevertheless, this infection is no longer limited to specific occupational groups and remains a potential fatal disease that should be included in the differential diagnosis of all the patients with unexplained fever.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ISSN\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 909,\n        \"samples\": [\n          \"2215-0161\",\n          \"1535-1815\",\n          \"1550-6606\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Journal\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 762,\n        \"samples\": [\n          \"Indian journal of medical microbiology\",\n          \"PLoS neglected tropical diseases\",\n          \"Annals of tropical medicine and parasitology\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3371,\n        \"samples\": [\n          \"S0037-86822023000100200\",\n          \"(104) 551-5\",\n          \"(11) 457\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1944,\n        \"max\": 2024,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          2009,\n          2018,\n          1944\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorForename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2115,\n        \"samples\": [\n          \"Afshin\",\n          \"Yuval\",\n          \"Fabrice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2242,\n        \"samples\": [\n          \"Ayanegui-Alc\\u00e9rreca\",\n          \"Hin\",\n          \"Lata\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 463,\n        \"samples\": [\n          \"LH\",\n          \"DM\",\n          \"EP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorAffiliation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3089,\n        \"samples\": [\n          \"Department of Biological Sciences, Okinawa Prefectural Institute of Health and Environment, Uruma, Okinawa, Japan.\",\n          \"Costa Rican Institute for Research in Nutrition and Health (INCIENSA), National Reference Centre for Leptospirosis, Tres Rios, Costa Rica.\",\n          \"Lao-Oxford-Mahosot Hospital-Wellcome Trust Research Unit (LOMWRU), Microbiology Laboratory, Mahosot Hospital, Vientiane, Lao PDR; Centre for Tropical Medicine and Global Health, Nuffield Department of Medicine, Churchill Hospital, University of Oxford, Oxford, UK.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["           PMID  AuthorN AuthorForename AuthorLastname AuthorInitials  \\\n","0      10548299        1              E          Daher              E   \n","1      10548299        2            D M        Zanetta             DM   \n","2      10548299        3            M B     Cavalcante             MB   \n","3      10548299        4            R C     Abdulkader             RC   \n","4      10569777        1            D A          Haake             DA   \n","...         ...      ...            ...            ...            ...   \n","21326  38081475        7      Catherine          Werts              C   \n","21327  38087323        1        Noraini         Philip              N   \n","21328  38087323        2      Kamruddin          Ahmed              K   \n","21329  38094659        1     Guan-Sheng             Li             GS   \n","21330  38094659        2        Hai-Qin            Guo             HQ   \n","\n","                                       AuthorAffiliation  \n","0      Departamento de Medicina Clínica, Faculdade de...  \n","1                                                    NaN  \n","2                                                    NaN  \n","3                                                    NaN  \n","4      Division of Infectious Diseases, Veterans Affa...  \n","...                                                  ...  \n","21326  Institut Pasteur, Université Paris Cité, CNRS ...  \n","21327  School of Biological Sciences, Universiti Sain...  \n","21328  Department of Pathology and Microbiology, Facu...  \n","21329  Department of Critical Medicine, Daomenkou, Ch...  \n","21330  Department of Respiratory and Critical Care Me...  \n","\n","[21331 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-6506dc91-4fc8-4f28-8f4b-f0c1c1909a1c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PMID</th>\n","      <th>AuthorN</th>\n","      <th>AuthorForename</th>\n","      <th>AuthorLastname</th>\n","      <th>AuthorInitials</th>\n","      <th>AuthorAffiliation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10548299</td>\n","      <td>1</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10548299</td>\n","      <td>2</td>\n","      <td>D M</td>\n","      <td>Zanetta</td>\n","      <td>DM</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10548299</td>\n","      <td>3</td>\n","      <td>M B</td>\n","      <td>Cavalcante</td>\n","      <td>MB</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10548299</td>\n","      <td>4</td>\n","      <td>R C</td>\n","      <td>Abdulkader</td>\n","      <td>RC</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10569777</td>\n","      <td>1</td>\n","      <td>D A</td>\n","      <td>Haake</td>\n","      <td>DA</td>\n","      <td>Division of Infectious Diseases, Veterans Affa...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21326</th>\n","      <td>38081475</td>\n","      <td>7</td>\n","      <td>Catherine</td>\n","      <td>Werts</td>\n","      <td>C</td>\n","      <td>Institut Pasteur, Université Paris Cité, CNRS ...</td>\n","    </tr>\n","    <tr>\n","      <th>21327</th>\n","      <td>38087323</td>\n","      <td>1</td>\n","      <td>Noraini</td>\n","      <td>Philip</td>\n","      <td>N</td>\n","      <td>School of Biological Sciences, Universiti Sain...</td>\n","    </tr>\n","    <tr>\n","      <th>21328</th>\n","      <td>38087323</td>\n","      <td>2</td>\n","      <td>Kamruddin</td>\n","      <td>Ahmed</td>\n","      <td>K</td>\n","      <td>Department of Pathology and Microbiology, Facu...</td>\n","    </tr>\n","    <tr>\n","      <th>21329</th>\n","      <td>38094659</td>\n","      <td>1</td>\n","      <td>Guan-Sheng</td>\n","      <td>Li</td>\n","      <td>GS</td>\n","      <td>Department of Critical Medicine, Daomenkou, Ch...</td>\n","    </tr>\n","    <tr>\n","      <th>21330</th>\n","      <td>38094659</td>\n","      <td>2</td>\n","      <td>Hai-Qin</td>\n","      <td>Guo</td>\n","      <td>HQ</td>\n","      <td>Department of Respiratory and Critical Care Me...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21331 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6506dc91-4fc8-4f28-8f4b-f0c1c1909a1c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6506dc91-4fc8-4f28-8f4b-f0c1c1909a1c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6506dc91-4fc8-4f28-8f4b-f0c1c1909a1c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-298a94e8-5f77-4f31-b659-6333f6acf266\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-298a94e8-5f77-4f31-b659-6333f6acf266')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-298a94e8-5f77-4f31-b659-6333f6acf266 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_da5fc99f-a2e2-4e0b-9257-df2d0672392f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('authors')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_da5fc99f-a2e2-4e0b-9257-df2d0672392f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('authors');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"authors","summary":"{\n  \"name\": \"authors\",\n  \"rows\": 21331,\n  \"fields\": [\n    {\n      \"column\": \"PMID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7186909,\n        \"min\": 10548299,\n        \"max\": 38094659,\n        \"num_unique_values\": 3387,\n        \"samples\": [\n          12932097,\n          22048423,\n          30576587\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 52,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          20,\n          42,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9058,\n        \"samples\": [\n          \"Rukman A\",\n          \"Nattawut\",\n          \"Sichao\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9914,\n        \"samples\": [\n          \"Tiengrim\",\n          \"Neves Souza\",\n          \"Jones\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 977,\n        \"samples\": [\n          \"RM\",\n          \"EI\",\n          \"KC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorAffiliation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7500,\n        \"samples\": [\n          \"Department of Medicine, Indira Gandhi Medical College, Shimla 171 001, Himachal Pradesh.\",\n          \"Laborat\\u00f3rio de Vacinologia, N\\u00facleo de Biotecnologia, Centro de Desenvolvimento Tecnol\\u00f3gico, Universidade Federal de Pelotas, Pelotas, RS, 96010-900, Brazil.\",\n          \"Institute for Research in Molecular Medicine (INFORMM), Universiti Sains Malaysia, 11800 Penang, Malaysia. Electronic address: rahmah8485@gmail.com.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["     Year    Count\n","0    1799        1\n","1    1801        1\n","2    1802        1\n","3    1805        1\n","4    1866        1\n","..    ...      ...\n","138  2020  1132241\n","139  2021  1277048\n","140  2022  1324650\n","141  2023  1302390\n","142  2024    15611\n","\n","[143 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-a885872e-95b6-4127-b27d-450a2d70b80f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1799</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1801</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1802</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1805</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1866</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>138</th>\n","      <td>2020</td>\n","      <td>1132241</td>\n","    </tr>\n","    <tr>\n","      <th>139</th>\n","      <td>2021</td>\n","      <td>1277048</td>\n","    </tr>\n","    <tr>\n","      <th>140</th>\n","      <td>2022</td>\n","      <td>1324650</td>\n","    </tr>\n","    <tr>\n","      <th>141</th>\n","      <td>2023</td>\n","      <td>1302390</td>\n","    </tr>\n","    <tr>\n","      <th>142</th>\n","      <td>2024</td>\n","      <td>15611</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>143 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a885872e-95b6-4127-b27d-450a2d70b80f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a885872e-95b6-4127-b27d-450a2d70b80f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a885872e-95b6-4127-b27d-450a2d70b80f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4fe43dc6-2d37-4ed5-a92f-6718be1ee7dc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4fe43dc6-2d37-4ed5-a92f-6718be1ee7dc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4fe43dc6-2d37-4ed5-a92f-6718be1ee7dc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ce9e65da-54c8-4143-b336-e955f9f4d31f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('paper_counts')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ce9e65da-54c8-4143-b336-e955f9f4d31f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('paper_counts');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"paper_counts","summary":"{\n  \"name\": \"paper_counts\",\n  \"rows\": 143,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47,\n        \"min\": 1799,\n        \"max\": 2024,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          1999,\n          1901,\n          1964\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 306092,\n        \"min\": 1,\n        \"max\": 1324650,\n        \"num_unique_values\": 125,\n        \"samples\": [\n          143,\n          173,\n          198\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["name_articles=articles['FirstAuthorLastname'].value_counts()\n","display(name_articles.head(50))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"yElUOJ2XqPtE","executionInfo":{"status":"ok","timestamp":1736855778620,"user_tz":0,"elapsed":187,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"e9ae9a50-1696-49ad-fe76-77f5f2fcdd2e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["FirstAuthorLastname\n","Zhang                 16\n","Silva                 15\n","Yang                  15\n","Agampodi              14\n","Vieira                14\n","Koizumi               14\n","Li                    13\n","Lin                   12\n","Oliveira              12\n","Chen                  11\n","Wang                  11\n","Smith                 11\n","Santos                11\n","Martins               10\n","Lee                   10\n","Fernandes             10\n","Lau                   10\n","Hamond                 9\n","Vijayachari            9\n","Daher                  9\n","Kim                    9\n","Xu                     8\n","Murray                 8\n","Natarajaseenivasan     8\n","Nally                  8\n","Spichler               8\n","Taylor                 7\n","Gamage                 7\n","Di Azevedo             7\n","Ahmed                  7\n","Levett                 7\n","Rajapakse              7\n","Costa                  7\n","Warnasekara            6\n","Haake                  6\n","da Silva               6\n","Picardeau              6\n","Lilenbaum              6\n","Avdeeva                6\n","Desvars                6\n","Bourhy                 6\n","Mgode                  6\n","Verma                  6\n","Souza                  5\n","Loureiro               5\n","Wynwood                5\n","Matsui                 5\n","Ehelepola              5\n","Hotez                  5\n","Ward                   5\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>FirstAuthorLastname</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Zhang</th>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>Silva</th>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>Yang</th>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>Agampodi</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>Vieira</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>Koizumi</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>Li</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>Lin</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>Oliveira</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>Chen</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Wang</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Smith</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Santos</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Martins</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Lee</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Fernandes</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Lau</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Hamond</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Vijayachari</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Daher</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Kim</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Xu</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Murray</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Natarajaseenivasan</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Nally</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Spichler</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Taylor</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Gamage</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Di Azevedo</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Ahmed</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Levett</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Rajapakse</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Costa</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Warnasekara</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Haake</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>da Silva</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Picardeau</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Avdeeva</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Desvars</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Bourhy</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Mgode</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Verma</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Souza</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Loureiro</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Wynwood</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Matsui</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Ehelepola</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Hotez</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Ward</th>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"code","source":["name_authors=authors['AuthorLastname'].value_counts()\n","display(name_authors.head(10))\n","\n","name_authors_corr=authors.groupby(['AuthorForename','AuthorLastname']).size().reset_index(name='Count')\n","\n","display(name_authors_corr.sort_values(by='Count',ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":836},"id":"alhX6ps1rHs3","executionInfo":{"status":"ok","timestamp":1737325056292,"user_tz":0,"elapsed":194,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"01cdd813-c905-4cd8-c15a-e3fa64cc3af0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["AuthorLastname\n","Zhang         105\n","Ko             98\n","Picardeau      78\n","Silva          77\n","Lilenbaum      77\n","Reis           76\n","Li             72\n","Wang           71\n","Yang           69\n","Hartskeerl     68\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>AuthorLastname</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Zhang</th>\n","      <td>105</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>98</td>\n","    </tr>\n","    <tr>\n","      <th>Picardeau</th>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>Silva</th>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>Reis</th>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>Li</th>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>Wang</th>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>Yang</th>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>Hartskeerl</th>\n","      <td>68</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["        AuthorForename   AuthorLastname  Count\n","516           Albert I               Ko     72\n","8501           Mathieu        Picardeau     70\n","13497           Walter        Lilenbaum     56\n","9543             Nobuo          Koizumi     53\n","8883      Mitermayer G             Reis     51\n","...                ...              ...    ...\n","5223              Irma  Salimović Bešić      1\n","5224   Irsadullakhan H          Kalyani      1\n","5225             Iryna        Pestushko      1\n","5226             Isaac           Golden      1\n","14221            Оlena       Chervinska      1\n","\n","[14222 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-d24e1b7c-0f2b-4f56-95ed-41c854d0ca75\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AuthorForename</th>\n","      <th>AuthorLastname</th>\n","      <th>Count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>516</th>\n","      <td>Albert I</td>\n","      <td>Ko</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>8501</th>\n","      <td>Mathieu</td>\n","      <td>Picardeau</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>13497</th>\n","      <td>Walter</td>\n","      <td>Lilenbaum</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>9543</th>\n","      <td>Nobuo</td>\n","      <td>Koizumi</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>8883</th>\n","      <td>Mitermayer G</td>\n","      <td>Reis</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5223</th>\n","      <td>Irma</td>\n","      <td>Salimović Bešić</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5224</th>\n","      <td>Irsadullakhan H</td>\n","      <td>Kalyani</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5225</th>\n","      <td>Iryna</td>\n","      <td>Pestushko</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5226</th>\n","      <td>Isaac</td>\n","      <td>Golden</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14221</th>\n","      <td>Оlena</td>\n","      <td>Chervinska</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14222 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d24e1b7c-0f2b-4f56-95ed-41c854d0ca75')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d24e1b7c-0f2b-4f56-95ed-41c854d0ca75 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d24e1b7c-0f2b-4f56-95ed-41c854d0ca75');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d74650df-89f4-45a6-8f9f-7442318b9e69\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d74650df-89f4-45a6-8f9f-7442318b9e69')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d74650df-89f4-45a6-8f9f-7442318b9e69 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(name_authors_corr\",\n  \"rows\": 14222,\n  \"fields\": [\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9058,\n        \"samples\": [\n          \"Carine\",\n          \"E A\",\n          \"Brian A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9905,\n        \"samples\": [\n          \"Rochereau-Roulet\",\n          \"Vitale\",\n          \"Wynckel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 72,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          20,\n          27,\n          51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"6OGrm-RYYkyY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lilenbaum=authors.set_index('AuthorLastname')\n","lilenbaum=lilenbaum.loc['Lilenbaum']\n","display(lilenbaum)\n","lilenbaum.to_csv('lilenbaum.csv',index=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"X5e2_na2J-aL","executionInfo":{"status":"ok","timestamp":1737386878320,"user_tz":0,"elapsed":218,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"4f74ef0d-2595-441e-c6df-5ea896a1dfc1"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["                    PMID  AuthorN AuthorForename AuthorInitials  \\\n","AuthorLastname                                                    \n","Lilenbaum       13129675        1              W              W   \n","Lilenbaum       16455276        1         Walter              W   \n","Lilenbaum       16584764        3         Walter              W   \n","Lilenbaum       17543359        1         Walter              W   \n","Lilenbaum       18291518        1              W              W   \n","...                  ...      ...            ...            ...   \n","Lilenbaum       37570231        4         Walter              W   \n","Lilenbaum       37700460        6         Walter              W   \n","Lilenbaum       37738912        6         Walter              W   \n","Lilenbaum       37760232        8         Walter              W   \n","Lilenbaum       37972741        4         Walter              W   \n","\n","                                                AuthorAffiliation  \n","AuthorLastname                                                     \n","Lilenbaum       Departamento de Microbiologia e Parasitologia,...  \n","Lilenbaum       Veterinary Bacteriology Laboratory, Universida...  \n","Lilenbaum                                                     NaN  \n","Lilenbaum       Veterinary Bacteriology Laboratory, Department...  \n","Lilenbaum       Veterinary Bacteriology Laboratory, Department...  \n","...                                                           ...  \n","Lilenbaum       Laboratory of Veterinary Bacteriology, Biomedi...  \n","Lilenbaum       Laboratory of Veterinary Bacteriology, Biomedi...  \n","Lilenbaum       Laboratory of Veterinary Bacteriology, Biomedi...  \n","Lilenbaum       Laboratory of Veterinary Bacteriology, Biomedi...  \n","Lilenbaum       Laboratory of Veterinary Bacteriology, Biomedi...  \n","\n","[77 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-9bb34329-554d-41e8-9e9e-d65d02b4810f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PMID</th>\n","      <th>AuthorN</th>\n","      <th>AuthorForename</th>\n","      <th>AuthorInitials</th>\n","      <th>AuthorAffiliation</th>\n","    </tr>\n","    <tr>\n","      <th>AuthorLastname</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>13129675</td>\n","      <td>1</td>\n","      <td>W</td>\n","      <td>W</td>\n","      <td>Departamento de Microbiologia e Parasitologia,...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>16455276</td>\n","      <td>1</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Veterinary Bacteriology Laboratory, Universida...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>16584764</td>\n","      <td>3</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>17543359</td>\n","      <td>1</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Veterinary Bacteriology Laboratory, Department...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>18291518</td>\n","      <td>1</td>\n","      <td>W</td>\n","      <td>W</td>\n","      <td>Veterinary Bacteriology Laboratory, Department...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>37570231</td>\n","      <td>4</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Laboratory of Veterinary Bacteriology, Biomedi...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>37700460</td>\n","      <td>6</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Laboratory of Veterinary Bacteriology, Biomedi...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>37738912</td>\n","      <td>6</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Laboratory of Veterinary Bacteriology, Biomedi...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>37760232</td>\n","      <td>8</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Laboratory of Veterinary Bacteriology, Biomedi...</td>\n","    </tr>\n","    <tr>\n","      <th>Lilenbaum</th>\n","      <td>37972741</td>\n","      <td>4</td>\n","      <td>Walter</td>\n","      <td>W</td>\n","      <td>Laboratory of Veterinary Bacteriology, Biomedi...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>77 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9bb34329-554d-41e8-9e9e-d65d02b4810f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9bb34329-554d-41e8-9e9e-d65d02b4810f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9bb34329-554d-41e8-9e9e-d65d02b4810f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ca3ec93c-c591-41c1-9e58-a41812db7a26\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca3ec93c-c591-41c1-9e58-a41812db7a26')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ca3ec93c-c591-41c1-9e58-a41812db7a26 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a9e64217-b9d6-4ea9-8413-27b5ce37229c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('lilenbaum')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a9e64217-b9d6-4ea9-8413-27b5ce37229c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('lilenbaum');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"lilenbaum","summary":"{\n  \"name\": \"lilenbaum\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Lilenbaum\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PMID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5679782,\n        \"min\": 13129675,\n        \"max\": 37972741,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          18291518\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 11,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Walter\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"W\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorAffiliation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 57,\n        \"samples\": [\n          \"Departamento de Microbiologia e Parasitologia, Universidade Federal Fluminense, Rua Hernani Mello, 101 Centro Niteroi, CEP 24210-130 Rio de Janeiro, Brazil. mipwalt@vm.uff.br\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["ko=authors.set_index('AuthorLastname')\n","ko=ko.loc['Ko']\n","display(ko)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"6JfslSneXDV7","executionInfo":{"status":"ok","timestamp":1737387581640,"user_tz":0,"elapsed":257,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"6117510f-046b-4a2e-e9db-6977cf4dc80b"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["                    PMID  AuthorN AuthorForename AuthorInitials  \\\n","AuthorLastname                                                    \n","Ko              11447174        8            A I             AI   \n","Ko              11526167       11            A I             AI   \n","Ko              11716133       10            A I             AI   \n","Ko              12201599       13       Albert I             AI   \n","Ko              12890019       11       Albert I             AI   \n","...                  ...      ...            ...            ...   \n","Ko              36962720        8       Albert I             AI   \n","Ko              37062365       10       Yi-Ching             YC   \n","Ko              37243454        6       Yi-Ching             YC   \n","Ko              37355266       23         Albert              A   \n","Ko              37486929        5       Albert I             AI   \n","\n","                                                AuthorAffiliation  \n","AuthorLastname                                                     \n","Ko                                                            NaN  \n","Ko                                                            NaN  \n","Ko                                                            NaN  \n","Ko                                                            NaN  \n","Ko                                                            NaN  \n","...                                                           ...  \n","Ko              Instituto Gonçalo Moniz, Fundação Oswaldo Cruz...  \n","Ko              Kidney Research Center and Department of Nephr...  \n","Ko              Kidney Research Center, Chang Gung Memorial Ho...  \n","Ko              Instituto Gonçalo Moniz, Fundação Oswaldo Cruz...  \n","Ko              Department of Epidemiology of Microbial Diseas...  \n","\n","[98 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-8a565e54-2bbe-44a6-93b2-35fae9bf7c2f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PMID</th>\n","      <th>AuthorN</th>\n","      <th>AuthorForename</th>\n","      <th>AuthorInitials</th>\n","      <th>AuthorAffiliation</th>\n","    </tr>\n","    <tr>\n","      <th>AuthorLastname</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Ko</th>\n","      <td>11447174</td>\n","      <td>8</td>\n","      <td>A I</td>\n","      <td>AI</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>11526167</td>\n","      <td>11</td>\n","      <td>A I</td>\n","      <td>AI</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>11716133</td>\n","      <td>10</td>\n","      <td>A I</td>\n","      <td>AI</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>12201599</td>\n","      <td>13</td>\n","      <td>Albert I</td>\n","      <td>AI</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>12890019</td>\n","      <td>11</td>\n","      <td>Albert I</td>\n","      <td>AI</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>36962720</td>\n","      <td>8</td>\n","      <td>Albert I</td>\n","      <td>AI</td>\n","      <td>Instituto Gonçalo Moniz, Fundação Oswaldo Cruz...</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>37062365</td>\n","      <td>10</td>\n","      <td>Yi-Ching</td>\n","      <td>YC</td>\n","      <td>Kidney Research Center and Department of Nephr...</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>37243454</td>\n","      <td>6</td>\n","      <td>Yi-Ching</td>\n","      <td>YC</td>\n","      <td>Kidney Research Center, Chang Gung Memorial Ho...</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>37355266</td>\n","      <td>23</td>\n","      <td>Albert</td>\n","      <td>A</td>\n","      <td>Instituto Gonçalo Moniz, Fundação Oswaldo Cruz...</td>\n","    </tr>\n","    <tr>\n","      <th>Ko</th>\n","      <td>37486929</td>\n","      <td>5</td>\n","      <td>Albert I</td>\n","      <td>AI</td>\n","      <td>Department of Epidemiology of Microbial Diseas...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>98 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a565e54-2bbe-44a6-93b2-35fae9bf7c2f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a565e54-2bbe-44a6-93b2-35fae9bf7c2f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a565e54-2bbe-44a6-93b2-35fae9bf7c2f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3926f5c5-a0b9-4bb2-bbd1-c6a04dd87d21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3926f5c5-a0b9-4bb2-bbd1-c6a04dd87d21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3926f5c5-a0b9-4bb2-bbd1-c6a04dd87d21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2e083472-70c9-4b1b-8a2a-b870473590ae\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ko')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2e083472-70c9-4b1b-8a2a-b870473590ae button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ko');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ko","summary":"{\n  \"name\": \"ko\",\n  \"rows\": 98,\n  \"fields\": [\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Ko\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PMID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6890461,\n        \"min\": 11447174,\n        \"max\": 37486929,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          28141801\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 23,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Albert I\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"AI\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorAffiliation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"Kidney Research Center and Department of Nephrology, Chang Gung Memorial Hospital, Linkou, Taiwan.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["merge_authorsarticles=pd.merge(articles, authors, on='PMID')\n","display(merge_authorsarticles)\n","merge_authorsarticles.to_csv('merge_authorsarticles.csv',index=True)"],"metadata":{"id":"6GMcz1cKus1c","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1737382006874,"user_tz":0,"elapsed":1908,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"83ae1b34-02d0-4b90-9576-402c7df4f110"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["           PMID                                              Title  \\\n","0      10548299  Risk factors for death and changing patterns i...   \n","1      10548299  Risk factors for death and changing patterns i...   \n","2      10548299  Risk factors for death and changing patterns i...   \n","3      10548299  Risk factors for death and changing patterns i...   \n","4      10569777  Leptospiral outer membrane proteins OmpL1 and ...   \n","...         ...                                                ...   \n","21326  38081475  Leptospiral lipopolysaccharide dampens inflamm...   \n","21327  38087323  Leptospirosis in Malaysia: current status, ins...   \n","21328  38087323  Leptospirosis in Malaysia: current status, ins...   \n","21329  38094659  Misdiagnosis of pneumorrhagia leptospirosis as...   \n","21330  38094659  Misdiagnosis of pneumorrhagia leptospirosis as...   \n","\n","                                                Abstract       ISSN  \\\n","0      The risk factors for death and changes in clin...  0002-9637   \n","1      The risk factors for death and changes in clin...  0002-9637   \n","2      The risk factors for death and changes in clin...  0002-9637   \n","3      The risk factors for death and changes in clin...  0002-9637   \n","4      New vaccine strategies are needed for preventi...  0019-9567   \n","...                                                  ...        ...   \n","21326  Leptospira interrogans are pathogenic bacteria...  1769-714X   \n","21327  Among zoonotic infections, leptospirosis has a...  1880-6805   \n","21328  Among zoonotic infections, leptospirosis has a...  1880-6805   \n","21329  The incidence of critical leptospirosis manife...  2213-0071   \n","21330  The incidence of critical leptospirosis manife...  2213-0071   \n","\n","                                                 Journal  \\\n","0      The American journal of tropical medicine and ...   \n","1      The American journal of tropical medicine and ...   \n","2      The American journal of tropical medicine and ...   \n","3      The American journal of tropical medicine and ...   \n","4                                 Infection and immunity   \n","...                                                  ...   \n","21326                             Microbes and infection   \n","21327              Journal of physiological anthropology   \n","21328              Journal of physiological anthropology   \n","21329                  Respiratory medicine case reports   \n","21330                  Respiratory medicine case reports   \n","\n","                    Location  Year FirstAuthorForename FirstAuthorLastname  \\\n","0                 (61) 630-4  1999                   E               Daher   \n","1                 (61) 630-4  1999                   E               Daher   \n","2                 (61) 630-4  1999                   E               Daher   \n","3                 (61) 630-4  1999                   E               Daher   \n","4               (67) 6572-82  1999                 D A               Haake   \n","...                      ...   ...                 ...                 ...   \n","21326  S1286-4579(23)00184-3  2023            Delphine            Bonhomme   \n","21327                (42) 30  2023             Noraini              Philip   \n","21328                (42) 30  2023             Noraini              Philip   \n","21329            (46) 101954  2023          Guan-Sheng                  Li   \n","21330            (46) 101954  2023          Guan-Sheng                  Li   \n","\n","      FirstAuthorInitials                             FirstAuthorAffiliation  \\\n","0                       E  Departamento de Medicina Clínica, Faculdade de...   \n","1                       E  Departamento de Medicina Clínica, Faculdade de...   \n","2                       E  Departamento de Medicina Clínica, Faculdade de...   \n","3                       E  Departamento de Medicina Clínica, Faculdade de...   \n","4                      DA  Division of Infectious Diseases, Veterans Affa...   \n","...                   ...                                                ...   \n","21326                   D  Institut Pasteur, Université Paris Cité, CNRS ...   \n","21327                   N  School of Biological Sciences, Universiti Sain...   \n","21328                   N  School of Biological Sciences, Universiti Sain...   \n","21329                  GS  Department of Critical Medicine, Daomenkou, Ch...   \n","21330                  GS  Department of Critical Medicine, Daomenkou, Ch...   \n","\n","       AuthorN AuthorForename AuthorLastname AuthorInitials  \\\n","0            1              E          Daher              E   \n","1            2            D M        Zanetta             DM   \n","2            3            M B     Cavalcante             MB   \n","3            4            R C     Abdulkader             RC   \n","4            1            D A          Haake             DA   \n","...        ...            ...            ...            ...   \n","21326        7      Catherine          Werts              C   \n","21327        1        Noraini         Philip              N   \n","21328        2      Kamruddin          Ahmed              K   \n","21329        1     Guan-Sheng             Li             GS   \n","21330        2        Hai-Qin            Guo             HQ   \n","\n","                                       AuthorAffiliation  \n","0      Departamento de Medicina Clínica, Faculdade de...  \n","1                                                    NaN  \n","2                                                    NaN  \n","3                                                    NaN  \n","4      Division of Infectious Diseases, Veterans Affa...  \n","...                                                  ...  \n","21326  Institut Pasteur, Université Paris Cité, CNRS ...  \n","21327  School of Biological Sciences, Universiti Sain...  \n","21328  Department of Pathology and Microbiology, Facu...  \n","21329  Department of Critical Medicine, Daomenkou, Ch...  \n","21330  Department of Respiratory and Critical Care Me...  \n","\n","[21331 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-9c2ae913-1540-4090-9d4c-c3952377aa7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PMID</th>\n","      <th>Title</th>\n","      <th>Abstract</th>\n","      <th>ISSN</th>\n","      <th>Journal</th>\n","      <th>Location</th>\n","      <th>Year</th>\n","      <th>FirstAuthorForename</th>\n","      <th>FirstAuthorLastname</th>\n","      <th>FirstAuthorInitials</th>\n","      <th>FirstAuthorAffiliation</th>\n","      <th>AuthorN</th>\n","      <th>AuthorForename</th>\n","      <th>AuthorLastname</th>\n","      <th>AuthorInitials</th>\n","      <th>AuthorAffiliation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10548299</td>\n","      <td>Risk factors for death and changing patterns i...</td>\n","      <td>The risk factors for death and changes in clin...</td>\n","      <td>0002-9637</td>\n","      <td>The American journal of tropical medicine and ...</td>\n","      <td>(61) 630-4</td>\n","      <td>1999</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","      <td>1</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10548299</td>\n","      <td>Risk factors for death and changing patterns i...</td>\n","      <td>The risk factors for death and changes in clin...</td>\n","      <td>0002-9637</td>\n","      <td>The American journal of tropical medicine and ...</td>\n","      <td>(61) 630-4</td>\n","      <td>1999</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","      <td>2</td>\n","      <td>D M</td>\n","      <td>Zanetta</td>\n","      <td>DM</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10548299</td>\n","      <td>Risk factors for death and changing patterns i...</td>\n","      <td>The risk factors for death and changes in clin...</td>\n","      <td>0002-9637</td>\n","      <td>The American journal of tropical medicine and ...</td>\n","      <td>(61) 630-4</td>\n","      <td>1999</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","      <td>3</td>\n","      <td>M B</td>\n","      <td>Cavalcante</td>\n","      <td>MB</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10548299</td>\n","      <td>Risk factors for death and changing patterns i...</td>\n","      <td>The risk factors for death and changes in clin...</td>\n","      <td>0002-9637</td>\n","      <td>The American journal of tropical medicine and ...</td>\n","      <td>(61) 630-4</td>\n","      <td>1999</td>\n","      <td>E</td>\n","      <td>Daher</td>\n","      <td>E</td>\n","      <td>Departamento de Medicina Clínica, Faculdade de...</td>\n","      <td>4</td>\n","      <td>R C</td>\n","      <td>Abdulkader</td>\n","      <td>RC</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10569777</td>\n","      <td>Leptospiral outer membrane proteins OmpL1 and ...</td>\n","      <td>New vaccine strategies are needed for preventi...</td>\n","      <td>0019-9567</td>\n","      <td>Infection and immunity</td>\n","      <td>(67) 6572-82</td>\n","      <td>1999</td>\n","      <td>D A</td>\n","      <td>Haake</td>\n","      <td>DA</td>\n","      <td>Division of Infectious Diseases, Veterans Affa...</td>\n","      <td>1</td>\n","      <td>D A</td>\n","      <td>Haake</td>\n","      <td>DA</td>\n","      <td>Division of Infectious Diseases, Veterans Affa...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21326</th>\n","      <td>38081475</td>\n","      <td>Leptospiral lipopolysaccharide dampens inflamm...</td>\n","      <td>Leptospira interrogans are pathogenic bacteria...</td>\n","      <td>1769-714X</td>\n","      <td>Microbes and infection</td>\n","      <td>S1286-4579(23)00184-3</td>\n","      <td>2023</td>\n","      <td>Delphine</td>\n","      <td>Bonhomme</td>\n","      <td>D</td>\n","      <td>Institut Pasteur, Université Paris Cité, CNRS ...</td>\n","      <td>7</td>\n","      <td>Catherine</td>\n","      <td>Werts</td>\n","      <td>C</td>\n","      <td>Institut Pasteur, Université Paris Cité, CNRS ...</td>\n","    </tr>\n","    <tr>\n","      <th>21327</th>\n","      <td>38087323</td>\n","      <td>Leptospirosis in Malaysia: current status, ins...</td>\n","      <td>Among zoonotic infections, leptospirosis has a...</td>\n","      <td>1880-6805</td>\n","      <td>Journal of physiological anthropology</td>\n","      <td>(42) 30</td>\n","      <td>2023</td>\n","      <td>Noraini</td>\n","      <td>Philip</td>\n","      <td>N</td>\n","      <td>School of Biological Sciences, Universiti Sain...</td>\n","      <td>1</td>\n","      <td>Noraini</td>\n","      <td>Philip</td>\n","      <td>N</td>\n","      <td>School of Biological Sciences, Universiti Sain...</td>\n","    </tr>\n","    <tr>\n","      <th>21328</th>\n","      <td>38087323</td>\n","      <td>Leptospirosis in Malaysia: current status, ins...</td>\n","      <td>Among zoonotic infections, leptospirosis has a...</td>\n","      <td>1880-6805</td>\n","      <td>Journal of physiological anthropology</td>\n","      <td>(42) 30</td>\n","      <td>2023</td>\n","      <td>Noraini</td>\n","      <td>Philip</td>\n","      <td>N</td>\n","      <td>School of Biological Sciences, Universiti Sain...</td>\n","      <td>2</td>\n","      <td>Kamruddin</td>\n","      <td>Ahmed</td>\n","      <td>K</td>\n","      <td>Department of Pathology and Microbiology, Facu...</td>\n","    </tr>\n","    <tr>\n","      <th>21329</th>\n","      <td>38094659</td>\n","      <td>Misdiagnosis of pneumorrhagia leptospirosis as...</td>\n","      <td>The incidence of critical leptospirosis manife...</td>\n","      <td>2213-0071</td>\n","      <td>Respiratory medicine case reports</td>\n","      <td>(46) 101954</td>\n","      <td>2023</td>\n","      <td>Guan-Sheng</td>\n","      <td>Li</td>\n","      <td>GS</td>\n","      <td>Department of Critical Medicine, Daomenkou, Ch...</td>\n","      <td>1</td>\n","      <td>Guan-Sheng</td>\n","      <td>Li</td>\n","      <td>GS</td>\n","      <td>Department of Critical Medicine, Daomenkou, Ch...</td>\n","    </tr>\n","    <tr>\n","      <th>21330</th>\n","      <td>38094659</td>\n","      <td>Misdiagnosis of pneumorrhagia leptospirosis as...</td>\n","      <td>The incidence of critical leptospirosis manife...</td>\n","      <td>2213-0071</td>\n","      <td>Respiratory medicine case reports</td>\n","      <td>(46) 101954</td>\n","      <td>2023</td>\n","      <td>Guan-Sheng</td>\n","      <td>Li</td>\n","      <td>GS</td>\n","      <td>Department of Critical Medicine, Daomenkou, Ch...</td>\n","      <td>2</td>\n","      <td>Hai-Qin</td>\n","      <td>Guo</td>\n","      <td>HQ</td>\n","      <td>Department of Respiratory and Critical Care Me...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21331 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c2ae913-1540-4090-9d4c-c3952377aa7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c2ae913-1540-4090-9d4c-c3952377aa7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c2ae913-1540-4090-9d4c-c3952377aa7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1fa3bd00-0110-4269-b568-bd36d941f273\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1fa3bd00-0110-4269-b568-bd36d941f273')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1fa3bd00-0110-4269-b568-bd36d941f273 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_049e37ac-3f72-453e-ace8-e20aaff82ff2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('merge_authorsarticles')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_049e37ac-3f72-453e-ace8-e20aaff82ff2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('merge_authorsarticles');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"merge_authorsarticles","summary":"{\n  \"name\": \"merge_authorsarticles\",\n  \"rows\": 21331,\n  \"fields\": [\n    {\n      \"column\": \"PMID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7186909,\n        \"min\": 10548299,\n        \"max\": 38094659,\n        \"num_unique_values\": 3387,\n        \"samples\": [\n          12932097,\n          22048423,\n          30576587\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3374,\n        \"samples\": [\n          \"Investigation and response to a large outbreak of leptospirosis in field workers in Lower Saxony, Germany.\",\n          \"Molecular epidemiology of leptospirosis in northern Iran by nested polymerase chain reaction/restriction fragment length polymorphism and sequencing methods.\",\n          \"Tropical Fever: Unveiling an Asymptomatic Case of Polycythemia Vera.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Abstract\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3384,\n        \"samples\": [\n          \"The HlyX, a putative hemolysin identified from the Leptospira genomes, was cloned, expressed in Escherichia coli, purified, and its hemolytic activity was confirmed. Mouse polyclonal antiserum against the recombinant HlyX recognized HlyX-related antigens in a panel of Leptospira species extracts and it was also able to abolish the hemolytic activity of HlyX. A mixture of HlyX and LipL32, a known hemolysin from Leptospira, induced hemolysis in a synergistic way that was fully inhibited by antiserum against either protein. Moreover, sera from patients with leptospirosis also recognized the recombinant HlyX, showing that it is presented to the host immune system during Leptospira infection.\",\n          \"A recombinant antigen-based single serum dilution enzyme-linked immunosorbent assay (ELISA) was developed to measure the specific antibody activity in sera of dogs with leptospirosis. The recombinant antigen developed and used in the assay was specific for the pathogenic serovars of Leptospira. A linear relationship was found to exist between the predicted antibody titres at a single working dilution of 1:1000 and the corresponding observed serum titres as determined by the standard serial-dilution method. Regression analysis was used to determine a standard curve from which an equation can be derived that allows demonstration of the mentioned correlation. The equation was then used to convert the corrected absorbance readings of the single working dilution directly into the predicted ELISA antibody titres. The assay was proved to be sensitive, specific and accurate as compared to the standard microscopic agglutination test (MAT).\",\n          \"All cases of human leptospirosis observed at the S. Bortolo Hospital, Vicenza, Italy, in the period from September 1990 to December 2003 were retrospectively reviewed. The aim of the study was to define the epidemiological, clinical, diagnostic, and therapeutic aspects of this infection and to compare these with an earlier local study (1979-1990) in order to assess if any changes have occurred over time. The screening test was made using macroscopic agglutination and the diagnosis was definitively confirmed using the microscopic agglutination test (MAT). The etiological serotype was identified in 13 patients (68%) and Leptospira poi was the most frequent serovar. Hepatic and renal involvements were present in a high percentage of patients (71% and 74%, respectively), cardiac involvement in 39%, and hypertriglyceridemia and hepatic steatosis were observed in 68% and 43% of cases, respectively. One patient died because of acute renal and respiratory failure. Intravenous penicillin was the treatment of choice. A consistent reduction in the prevalence was observed during the time period of this study (n = 38) compared with the previous period (n = 86); males were more affected than females in both time periods. In industrialized countries the prevalence of leptospirosis is decreasing; nevertheless, this infection is no longer limited to specific occupational groups and remains a potential fatal disease that should be included in the differential diagnosis of all the patients with unexplained fever.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ISSN\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 909,\n        \"samples\": [\n          \"2215-0161\",\n          \"1687-9635\",\n          \"1535-3907\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Journal\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 762,\n        \"samples\": [\n          \"Indian journal of medical microbiology\",\n          \"Journal of comparative pathology\",\n          \"Annals of tropical medicine and parasitology\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3369,\n        \"samples\": [\n          \"S0037-86822023000100200\",\n          \"(68) 562-3\",\n          \"(15) e1007811\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 1944,\n        \"max\": 2024,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          2009,\n          2018,\n          1944\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorForename\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2115,\n        \"samples\": [\n          \"Afshin\",\n          \"Yuval\",\n          \"Fabrice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2242,\n        \"samples\": [\n          \"Ayanegui-Alc\\u00e9rreca\",\n          \"Hin\",\n          \"Lata\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 463,\n        \"samples\": [\n          \"LH\",\n          \"DM\",\n          \"EP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorAffiliation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3089,\n        \"samples\": [\n          \"Department of Biological Sciences, Okinawa Prefectural Institute of Health and Environment, Uruma, Okinawa, Japan.\",\n          \"Costa Rican Institute for Research in Nutrition and Health (INCIENSA), National Reference Centre for Leptospirosis, Tres Rios, Costa Rica.\",\n          \"Lao-Oxford-Mahosot Hospital-Wellcome Trust Research Unit (LOMWRU), Microbiology Laboratory, Mahosot Hospital, Vientiane, Lao PDR; Centre for Tropical Medicine and Global Health, Nuffield Department of Medicine, Churchill Hospital, University of Oxford, Oxford, UK.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 52,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          20,\n          42,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9058,\n        \"samples\": [\n          \"Rukman A\",\n          \"Nattawut\",\n          \"Sichao\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9914,\n        \"samples\": [\n          \"Tiengrim\",\n          \"Neves Souza\",\n          \"Jones\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 977,\n        \"samples\": [\n          \"RM\",\n          \"EI\",\n          \"KC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorAffiliation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7500,\n        \"samples\": [\n          \"Department of Medicine, Indira Gandhi Medical College, Shimla 171 001, Himachal Pradesh.\",\n          \"Laborat\\u00f3rio de Vacinologia, N\\u00facleo de Biotecnologia, Centro de Desenvolvimento Tecnol\\u00f3gico, Universidade Federal de Pelotas, Pelotas, RS, 96010-900, Brazil.\",\n          \"Institute for Research in Molecular Medicine (INFORMM), Universiti Sains Malaysia, 11800 Penang, Malaysia. Electronic address: rahmah8485@gmail.com.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["author_count=(merge_authorsarticles.groupby(['AuthorLastname','AuthorInitials']).size()\n",".reset_index(name='PubCount').sort_values(by='PubCount', ascending=False))\n","\n","display(author_count.head(20))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"myQrla6CLXDR","executionInfo":{"status":"ok","timestamp":1737393643836,"user_tz":0,"elapsed":262,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"4dd6ccb8-b017-4ec6-8753-6900d5c0813c"},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":["           AuthorLastname AuthorInitials  PubCount\n","5590                   Ko             AI        86\n","8618            Picardeau              M        78\n","6200            Lilenbaum              W        77\n","2670          Dellagostin             OA        60\n","9219                 Reis             MG        57\n","5616              Koizumi              N        56\n","4393           Hartskeerl             RA        56\n","11615        Vasconcellos             SA        56\n","3856              Goarant              C        41\n","2337                Costa              F        41\n","11766              Vinetz             JM        39\n","12248                 Yan              J        39\n","9473               Romero             EC        38\n","4237                Haake             DA        38\n","11737         Vijayachari              P        37\n","7693                Nally             JE        37\n","1339               Bourhy              P        36\n","7738   Natarajaseenivasan              K        36\n","12176              Wunder             EA        32\n","10470              Smythe             LD        32"],"text/html":["\n","  <div id=\"df-05daac7b-df2c-46f7-9ddd-b7698787ca6a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AuthorLastname</th>\n","      <th>AuthorInitials</th>\n","      <th>PubCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5590</th>\n","      <td>Ko</td>\n","      <td>AI</td>\n","      <td>86</td>\n","    </tr>\n","    <tr>\n","      <th>8618</th>\n","      <td>Picardeau</td>\n","      <td>M</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>6200</th>\n","      <td>Lilenbaum</td>\n","      <td>W</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>2670</th>\n","      <td>Dellagostin</td>\n","      <td>OA</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>9219</th>\n","      <td>Reis</td>\n","      <td>MG</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>5616</th>\n","      <td>Koizumi</td>\n","      <td>N</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>4393</th>\n","      <td>Hartskeerl</td>\n","      <td>RA</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>11615</th>\n","      <td>Vasconcellos</td>\n","      <td>SA</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>3856</th>\n","      <td>Goarant</td>\n","      <td>C</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>2337</th>\n","      <td>Costa</td>\n","      <td>F</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>11766</th>\n","      <td>Vinetz</td>\n","      <td>JM</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>12248</th>\n","      <td>Yan</td>\n","      <td>J</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>9473</th>\n","      <td>Romero</td>\n","      <td>EC</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>4237</th>\n","      <td>Haake</td>\n","      <td>DA</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>11737</th>\n","      <td>Vijayachari</td>\n","      <td>P</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>7693</th>\n","      <td>Nally</td>\n","      <td>JE</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>Bourhy</td>\n","      <td>P</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>7738</th>\n","      <td>Natarajaseenivasan</td>\n","      <td>K</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>12176</th>\n","      <td>Wunder</td>\n","      <td>EA</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>10470</th>\n","      <td>Smythe</td>\n","      <td>LD</td>\n","      <td>32</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05daac7b-df2c-46f7-9ddd-b7698787ca6a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-05daac7b-df2c-46f7-9ddd-b7698787ca6a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-05daac7b-df2c-46f7-9ddd-b7698787ca6a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-30cf2913-c441-4de3-98c7-8d19bcfff36a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30cf2913-c441-4de3-98c7-8d19bcfff36a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-30cf2913-c441-4de3-98c7-8d19bcfff36a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(author_count\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Ko\",\n          \"Natarajaseenivasan\",\n          \"Nally\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"AI\",\n          \"N\",\n          \"J\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PubCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 32,\n        \"max\": 86,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          36,\n          37,\n          86\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"vcIjqftKXaMY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kJW4MJADl5xA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["first_authors=(articles.groupby(['FirstAuthorForename','FirstAuthorLastname'])\n",".size().reset_index(name='PubCount'))\n","first_authors.rename(columns={'FirstAuthorForename':'AuthorForename',\n","                              'FirstAuthorLastname':'AuthorLastname'},inplace=True)\n","\n","last_authors=(authors.loc[authors.groupby('PMID')['AuthorN'].idxmax()]\n","              .groupby(['AuthorForename','AuthorLastname']).size().reset_index(name='PubCount'))\n","\n","combined=pd.concat([first_authors,last_authors])\n","total_cont=(combined.groupby(['AuthorForename','AuthorLastname'])\n",".agg({'PubCount':'sum'}).reset_index().sort_values(by='PubCount',ascending=False))\n","\n","display(total_cont.head(10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"1g1B6KAZOerF","executionInfo":{"status":"ok","timestamp":1737384511728,"user_tz":0,"elapsed":217,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"7fa553b3-0f44-4f58-95bf-61249673de1b"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["     AuthorForename      AuthorLastname  PubCount\n","4490         Walter           Lilenbaum        42\n","2829        Mathieu           Picardeau        38\n","1995            Jie                 Yan        29\n","897         Cyrille             Goarant        28\n","2061       Joseph M              Vinetz        27\n","3153          Nobuo             Koizumi        26\n","274       Ana L T O          Nascimento        26\n","173        Albert I                  Ko        25\n","2198  Kalimuthusamy  Natarajaseenivasan        23\n","4468              W           Lilenbaum        21"],"text/html":["\n","  <div id=\"df-a62587c5-cb7e-4a97-9fb9-5ceb3e4f1094\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AuthorForename</th>\n","      <th>AuthorLastname</th>\n","      <th>PubCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4490</th>\n","      <td>Walter</td>\n","      <td>Lilenbaum</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>2829</th>\n","      <td>Mathieu</td>\n","      <td>Picardeau</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Jie</td>\n","      <td>Yan</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>897</th>\n","      <td>Cyrille</td>\n","      <td>Goarant</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>2061</th>\n","      <td>Joseph M</td>\n","      <td>Vinetz</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>3153</th>\n","      <td>Nobuo</td>\n","      <td>Koizumi</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>274</th>\n","      <td>Ana L T O</td>\n","      <td>Nascimento</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>Albert I</td>\n","      <td>Ko</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>2198</th>\n","      <td>Kalimuthusamy</td>\n","      <td>Natarajaseenivasan</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>4468</th>\n","      <td>W</td>\n","      <td>Lilenbaum</td>\n","      <td>21</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a62587c5-cb7e-4a97-9fb9-5ceb3e4f1094')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a62587c5-cb7e-4a97-9fb9-5ceb3e4f1094 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a62587c5-cb7e-4a97-9fb9-5ceb3e4f1094');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-380b9a92-d8e3-46e2-8fa1-0d0aabd1832f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-380b9a92-d8e3-46e2-8fa1-0d0aabd1832f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-380b9a92-d8e3-46e2-8fa1-0d0aabd1832f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(total_cont\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Kalimuthusamy\",\n          \"Mathieu\",\n          \"Nobuo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Ko\",\n          \"Picardeau\",\n          \"Koizumi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PubCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 21,\n        \"max\": 42,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          23,\n          38,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["first_authors=(articles.groupby(['FirstAuthorInitials','FirstAuthorLastname'])\n",".size().reset_index(name='PubCount'))\n","first_authors.rename(columns={'FirstAuthorInitials':'AuthorInitials',\n","                              'FirstAuthorLastname':'AuthorLastname'},inplace=True)\n","\n","last_authors=(authors.loc[authors.groupby('PMID')['AuthorN'].idxmax()]\n","              .groupby(['AuthorInitials','AuthorLastname']).size().reset_index(name='PubCount'))\n","\n","combined=pd.concat([first_authors,last_authors])\n","total_cont=(combined.groupby(['AuthorInitials','AuthorLastname'])\n",".agg({'PubCount':'sum'}).reset_index().sort_values(by='PubCount',ascending=False))\n","\n","display(total_cont.head(10))"],"metadata":{"id":"mFwr8D1ql1Jb","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1737384788180,"user_tz":0,"elapsed":219,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"8c7bdf98-75f7-4cc4-fa8e-2f2e4ef1a426"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["     AuthorInitials      AuthorLastname  PubCount\n","4154              W           Lilenbaum        63\n","2484              M           Picardeau        44\n","612               C             Goarant        31\n","1808              J                 Yan        30\n","1922             JM              Vinetz        30\n","2965             OA         Dellagostin        30\n","322              AI                  Ko        29\n","2038              K  Natarajaseenivasan        28\n","1860             JE               Nally        26\n","2838              N             Koizumi        26"],"text/html":["\n","  <div id=\"df-a9efbfdd-5bae-489b-8339-4a7ff00e1117\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AuthorInitials</th>\n","      <th>AuthorLastname</th>\n","      <th>PubCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4154</th>\n","      <td>W</td>\n","      <td>Lilenbaum</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>2484</th>\n","      <td>M</td>\n","      <td>Picardeau</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>C</td>\n","      <td>Goarant</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>1808</th>\n","      <td>J</td>\n","      <td>Yan</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>1922</th>\n","      <td>JM</td>\n","      <td>Vinetz</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>2965</th>\n","      <td>OA</td>\n","      <td>Dellagostin</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>322</th>\n","      <td>AI</td>\n","      <td>Ko</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>2038</th>\n","      <td>K</td>\n","      <td>Natarajaseenivasan</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>1860</th>\n","      <td>JE</td>\n","      <td>Nally</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>2838</th>\n","      <td>N</td>\n","      <td>Koizumi</td>\n","      <td>26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9efbfdd-5bae-489b-8339-4a7ff00e1117')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9efbfdd-5bae-489b-8339-4a7ff00e1117 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9efbfdd-5bae-489b-8339-4a7ff00e1117');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08816bb5-82b1-4e04-941d-a0b1138495cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08816bb5-82b1-4e04-941d-a0b1138495cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08816bb5-82b1-4e04-941d-a0b1138495cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(total_cont\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"JE\",\n          \"M\",\n          \"OA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Nally\",\n          \"Picardeau\",\n          \"Dellagostin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PubCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 26,\n        \"max\": 63,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          63,\n          44,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["first_authors.rename(columns={'PubCount':'FirstAuthorCount'}, inplace=True)\n","last_authors.rename(columns={'PubCount':'LastAuthorCount'}, inplace=True)\n","\n","separated_cont=pd.merge(\n","    first_authors,\n","    last_authors,\n","    on=['AuthorForename','AuthorLastname'],\n","    how='outer'\n",")\n","\n","separated_cont.fillna({'FirstAuthorCount':0,'LastAuthorCount':0}, inplace=True)\n","\n","separated_cont['TotalPub']=(\n","    separated_cont['FirstAuthorCount']+separated_cont['LastAuthorCount']\n","                            )\n","\n","separated_cont=separated_cont.sort_values(by='TotalPub',ascending=False)\n","display(separated_cont.head(10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"zl1gpgj68gCQ","executionInfo":{"status":"ok","timestamp":1737382160523,"user_tz":0,"elapsed":228,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"7c5237f5-8ffd-41ee-82e2-d37d7678b0bc"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["     AuthorForename      AuthorLastname  FirstAuthorCount  LastAuthorCount  \\\n","4490         Walter           Lilenbaum               2.0             40.0   \n","2829        Mathieu           Picardeau               4.0             34.0   \n","1995            Jie                 Yan               0.0             29.0   \n","897         Cyrille             Goarant               3.0             25.0   \n","2061       Joseph M              Vinetz               0.0             27.0   \n","3153          Nobuo             Koizumi              14.0             12.0   \n","274       Ana L T O          Nascimento               0.0             26.0   \n","173        Albert I                  Ko               1.0             24.0   \n","2198  Kalimuthusamy  Natarajaseenivasan               3.0             20.0   \n","4468              W           Lilenbaum               4.0             17.0   \n","\n","      TotalPub  \n","4490      42.0  \n","2829      38.0  \n","1995      29.0  \n","897       28.0  \n","2061      27.0  \n","3153      26.0  \n","274       26.0  \n","173       25.0  \n","2198      23.0  \n","4468      21.0  "],"text/html":["\n","  <div id=\"df-04c8dac8-5e14-4ee9-bbf0-f1600a3cdf4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AuthorForename</th>\n","      <th>AuthorLastname</th>\n","      <th>FirstAuthorCount</th>\n","      <th>LastAuthorCount</th>\n","      <th>TotalPub</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4490</th>\n","      <td>Walter</td>\n","      <td>Lilenbaum</td>\n","      <td>2.0</td>\n","      <td>40.0</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>2829</th>\n","      <td>Mathieu</td>\n","      <td>Picardeau</td>\n","      <td>4.0</td>\n","      <td>34.0</td>\n","      <td>38.0</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Jie</td>\n","      <td>Yan</td>\n","      <td>0.0</td>\n","      <td>29.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>897</th>\n","      <td>Cyrille</td>\n","      <td>Goarant</td>\n","      <td>3.0</td>\n","      <td>25.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>2061</th>\n","      <td>Joseph M</td>\n","      <td>Vinetz</td>\n","      <td>0.0</td>\n","      <td>27.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>3153</th>\n","      <td>Nobuo</td>\n","      <td>Koizumi</td>\n","      <td>14.0</td>\n","      <td>12.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>274</th>\n","      <td>Ana L T O</td>\n","      <td>Nascimento</td>\n","      <td>0.0</td>\n","      <td>26.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>Albert I</td>\n","      <td>Ko</td>\n","      <td>1.0</td>\n","      <td>24.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>2198</th>\n","      <td>Kalimuthusamy</td>\n","      <td>Natarajaseenivasan</td>\n","      <td>3.0</td>\n","      <td>20.0</td>\n","      <td>23.0</td>\n","    </tr>\n","    <tr>\n","      <th>4468</th>\n","      <td>W</td>\n","      <td>Lilenbaum</td>\n","      <td>4.0</td>\n","      <td>17.0</td>\n","      <td>21.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04c8dac8-5e14-4ee9-bbf0-f1600a3cdf4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-04c8dac8-5e14-4ee9-bbf0-f1600a3cdf4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-04c8dac8-5e14-4ee9-bbf0-f1600a3cdf4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d68a1d42-0a47-4643-9dd9-4b47b1a7c220\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d68a1d42-0a47-4643-9dd9-4b47b1a7c220')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d68a1d42-0a47-4643-9dd9-4b47b1a7c220 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(separated_cont\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"AuthorForename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Kalimuthusamy\",\n          \"Mathieu\",\n          \"Nobuo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Ko\",\n          \"Picardeau\",\n          \"Koizumi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.1486276177925525,\n        \"min\": 0.0,\n        \"max\": 14.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2.0,\n          4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LastAuthorCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.058122196475637,\n        \"min\": 12.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          20.0,\n          34.0,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TotalPub\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.553201083779166,\n        \"min\": 21.0,\n        \"max\": 42.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          23.0,\n          38.0,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["first_authors.rename(columns={'PubCount':'FirstAuthorCount'}, inplace=True)\n","last_authors.rename(columns={'PubCount':'LastAuthorCount'}, inplace=True)\n","\n","separated_cont=pd.merge(\n","    first_authors,\n","    last_authors,\n","    on=['AuthorInitials','AuthorLastname'],\n","    how='outer'\n",")\n","\n","separated_cont.fillna({'FirstAuthorCount':0,'LastAuthorCount':0}, inplace=True)\n","\n","separated_cont['TotalPub']=(\n","    separated_cont['FirstAuthorCount']+separated_cont['LastAuthorCount']\n","                            )\n","\n","separated_cont=separated_cont.sort_values(by='TotalPub',ascending=False)\n","display(separated_cont.head(20))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"zWmCRequOdPC","executionInfo":{"status":"ok","timestamp":1737388421394,"user_tz":0,"elapsed":212,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"20a3c7a8-7e8e-4211-c0d3-bcb330584d2e"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":["     AuthorInitials      AuthorLastname  FirstAuthorCount  LastAuthorCount  \\\n","4154              W           Lilenbaum               6.0             57.0   \n","2484              M           Picardeau               6.0             38.0   \n","612               C             Goarant               4.0             27.0   \n","1808              J                 Yan               0.0             30.0   \n","1922             JM              Vinetz               1.0             29.0   \n","2965             OA         Dellagostin               1.0             29.0   \n","322              AI                  Ko               1.0             28.0   \n","2038              K  Natarajaseenivasan               8.0             20.0   \n","1860             JE               Nally               8.0             18.0   \n","2838              N             Koizumi              14.0             12.0   \n","354              AL          Nascimento               1.0             21.0   \n","3110              P         Vijayachari               9.0             12.0   \n","440               B               Adler               5.0             15.0   \n","4300             YF               Chang               1.0             19.0   \n","3737             SC              Sehgal               4.0             15.0   \n","818              CW                Yang               5.0             14.0   \n","927              DA               Haake               6.0             13.0   \n","3175             PN              Levett               7.0             11.0   \n","3344             RA          Hartskeerl               2.0             16.0   \n","3620              S           Rajapakse               7.0             10.0   \n","\n","      TotalPub  \n","4154      63.0  \n","2484      44.0  \n","612       31.0  \n","1808      30.0  \n","1922      30.0  \n","2965      30.0  \n","322       29.0  \n","2038      28.0  \n","1860      26.0  \n","2838      26.0  \n","354       22.0  \n","3110      21.0  \n","440       20.0  \n","4300      20.0  \n","3737      19.0  \n","818       19.0  \n","927       19.0  \n","3175      18.0  \n","3344      18.0  \n","3620      17.0  "],"text/html":["\n","  <div id=\"df-1205300c-af74-474e-a720-4467ac8061cc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AuthorInitials</th>\n","      <th>AuthorLastname</th>\n","      <th>FirstAuthorCount</th>\n","      <th>LastAuthorCount</th>\n","      <th>TotalPub</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4154</th>\n","      <td>W</td>\n","      <td>Lilenbaum</td>\n","      <td>6.0</td>\n","      <td>57.0</td>\n","      <td>63.0</td>\n","    </tr>\n","    <tr>\n","      <th>2484</th>\n","      <td>M</td>\n","      <td>Picardeau</td>\n","      <td>6.0</td>\n","      <td>38.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>612</th>\n","      <td>C</td>\n","      <td>Goarant</td>\n","      <td>4.0</td>\n","      <td>27.0</td>\n","      <td>31.0</td>\n","    </tr>\n","    <tr>\n","      <th>1808</th>\n","      <td>J</td>\n","      <td>Yan</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>1922</th>\n","      <td>JM</td>\n","      <td>Vinetz</td>\n","      <td>1.0</td>\n","      <td>29.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>2965</th>\n","      <td>OA</td>\n","      <td>Dellagostin</td>\n","      <td>1.0</td>\n","      <td>29.0</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>322</th>\n","      <td>AI</td>\n","      <td>Ko</td>\n","      <td>1.0</td>\n","      <td>28.0</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>2038</th>\n","      <td>K</td>\n","      <td>Natarajaseenivasan</td>\n","      <td>8.0</td>\n","      <td>20.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>1860</th>\n","      <td>JE</td>\n","      <td>Nally</td>\n","      <td>8.0</td>\n","      <td>18.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>2838</th>\n","      <td>N</td>\n","      <td>Koizumi</td>\n","      <td>14.0</td>\n","      <td>12.0</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>354</th>\n","      <td>AL</td>\n","      <td>Nascimento</td>\n","      <td>1.0</td>\n","      <td>21.0</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>3110</th>\n","      <td>P</td>\n","      <td>Vijayachari</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>440</th>\n","      <td>B</td>\n","      <td>Adler</td>\n","      <td>5.0</td>\n","      <td>15.0</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>4300</th>\n","      <td>YF</td>\n","      <td>Chang</td>\n","      <td>1.0</td>\n","      <td>19.0</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>3737</th>\n","      <td>SC</td>\n","      <td>Sehgal</td>\n","      <td>4.0</td>\n","      <td>15.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>818</th>\n","      <td>CW</td>\n","      <td>Yang</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>927</th>\n","      <td>DA</td>\n","      <td>Haake</td>\n","      <td>6.0</td>\n","      <td>13.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>3175</th>\n","      <td>PN</td>\n","      <td>Levett</td>\n","      <td>7.0</td>\n","      <td>11.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>3344</th>\n","      <td>RA</td>\n","      <td>Hartskeerl</td>\n","      <td>2.0</td>\n","      <td>16.0</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>3620</th>\n","      <td>S</td>\n","      <td>Rajapakse</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","      <td>17.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1205300c-af74-474e-a720-4467ac8061cc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1205300c-af74-474e-a720-4467ac8061cc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1205300c-af74-474e-a720-4467ac8061cc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e59955e3-f451-4e51-b954-4407db746422\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e59955e3-f451-4e51-b954-4407db746422')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e59955e3-f451-4e51-b954-4407db746422 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(separated_cont\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"AuthorInitials\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"W\",\n          \"PN\",\n          \"CW\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AuthorLastname\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Lilenbaum\",\n          \"Levett\",\n          \"Yang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FirstAuthorCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.5629674208593687,\n        \"min\": 0.0,\n        \"max\": 14.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          7.0,\n          4.0,\n          14.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LastAuthorCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.416055176350264,\n        \"min\": 10.0,\n        \"max\": 57.0,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          57.0,\n          38.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TotalPub\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.865202785910043,\n        \"min\": 17.0,\n        \"max\": 63.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          18.0,\n          20.0,\n          63.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["print(first_authors.columns)\n","print(last_authors.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1qkurPaZ_HXC","executionInfo":{"status":"ok","timestamp":1737263742530,"user_tz":0,"elapsed":256,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"1b7a28e0-af9e-4332-8667-db17c6ff72dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['AuthorForname', 'AuthorLastname', 'FirstAuthorCount'], dtype='object')\n","Index(['AuthorForename', 'AuthorLastname', 'LastAuthorCount'], dtype='object')\n"]}]},{"cell_type":"code","source":["author_count['AuthorName'] = author_count['AuthorForename'] + ' ' + author_count['AuthorLastname']\n","\n","top10_authors=author_count.head(10)\n","authornamestotal=top10_authors['AuthorName']\n","totalpub=top10_authors['PubCount']\n","\n","fig, ax=plt.subplots(figsize=(12,6))\n","\n","bars=ax.bar(authornamestotal, totalpub, label='Author Contribution', color='turquoise')\n","\n","ax.set_xlabel('Authors', fontsize=12)\n","ax.set_ylabel('Publication Count', fontsize=12)\n","ax.set_title('Top 10 Total Author Contribution', fontsize=14)\n","ax.set_xticks(range(len(authornamestotal)))\n","ax.set_xticklabels(authornamestotal,rotation=45, ha='right', fontsize=10)\n","ax.legend()\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":568},"id":"bsY6ePOqpSrL","executionInfo":{"status":"ok","timestamp":1737383311903,"user_tz":0,"elapsed":889,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"44c0ad93-13ef-4464-c791-75fcb545827c"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["author_count['AuthorName'] = author_count['AuthorInitials'] + ' ' + author_count['AuthorLastname']\n","\n","top10_authors=author_count.head(20)\n","authornamestotal=top10_authors['AuthorName']\n","totalpub=top10_authors['PubCount']\n","\n","fig, ax=plt.subplots(figsize=(12,6))\n","\n","bars=ax.bar(authornamestotal, totalpub, label='Author Contribution', color='turquoise')\n","\n","ax.set_xlabel('Authors', fontsize=12)\n","ax.set_ylabel('Publication Count', fontsize=12)\n","ax.set_title('Top 20 Total Author Contribution', fontsize=14)\n","ax.set_xticks(range(len(authornamestotal)))\n","ax.set_xticklabels(authornamestotal,rotation=45, ha='right', fontsize=10)\n","ax.legend()\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":568},"id":"bie0mT11Wdti","executionInfo":{"status":"ok","timestamp":1737388596430,"user_tz":0,"elapsed":1121,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"1573fa18-c984-4b50-8594-015c44954fa2"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["top5_authors=separated_cont.sort_values(by='TotalPub',ascending=False).head(10)\n","top5_authors['AuthorName']=top5_authors['AuthorForename']+' '+top5_authors['AuthorLastname']\n","authornames=top5_authors['AuthorName']\n","first_authors_count=top5_authors['FirstAuthorCount']\n","last_authors_count=top5_authors['LastAuthorCount']\n","\n","x=np.arange(len(authornames))\n","width=0.35\n","\n","fig, ax=plt.subplots(figsize=(12,6))\n","\n","bars1=ax.bar(x-width/2,first_authors_count, width, label='First Author', color='blue')\n","bars2=ax.bar(x+width/2,last_authors_count, width, label='Last Author', color='orange')\n","\n","ax.set_xlabel('Authors', fontsize=12)\n","ax.set_ylabel('Publication Count', fontsize=12)\n","ax.set_title('Top 10 Authors Contributions by First and Last Author', fontsize=14)\n","ax.set_xticks(x)\n","ax.set_xticklabels(authornames,rotation=45, ha='right', fontsize=10)\n","ax.legend()\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":568},"id":"s7Pdau9MsFAt","executionInfo":{"status":"ok","timestamp":1737383320124,"user_tz":0,"elapsed":652,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"7225d97d-e0af-4f9a-8090-bd5f2c2092cd"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["top_authors=separated_cont.sort_values(by='TotalPub',ascending=False).head(20)\n","top_authors['AuthorName']=top_authors['AuthorInitials']+' '+top_authors['AuthorLastname']\n","authornames=top_authors['AuthorName']\n","first_authors_count=top_authors['FirstAuthorCount']\n","last_authors_count=top_authors['LastAuthorCount']\n","\n","x=np.arange(len(authornames))\n","width=0.35\n","\n","fig, ax=plt.subplots(figsize=(12,6))\n","\n","bars1=ax.bar(x-width/2,first_authors_count, width, label='First Author', color='blue')\n","bars2=ax.bar(x+width/2,last_authors_count, width, label='Last Author', color='orange')\n","\n","ax.set_xlabel('Authors', fontsize=12)\n","ax.set_ylabel('Publication Count', fontsize=12)\n","ax.set_title('Top 20 Authors Contributions by First and Last Author', fontsize=14)\n","ax.set_xticks(x)\n","ax.set_xticklabels(authornames,rotation=45, ha='right', fontsize=10)\n","ax.legend()\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":568},"id":"qcsD8d-faLwy","executionInfo":{"status":"ok","timestamp":1737388400851,"user_tz":0,"elapsed":1277,"user":{"displayName":"Rio Budisatrio","userId":"17420497472876514920"}},"outputId":"cb771395-80c9-48e2-f9ff-c0b5097cadf8"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}